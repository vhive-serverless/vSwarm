# MIT License

# Copyright (c) 2023 HyScale lab and vSwarm team

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

FROM ubuntu:20.04

ENV PYTHON_VERSION=3.7
ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8
ENV PATH /opt/anaconda3/bin:$PATH
ENV DEBIAN_FRONTEND=noninteractive

WORKDIR /app
ENV HOME /app

RUN apt-get update

RUN apt-get install -y --no-install-recommends \
      git \
      build-essential \
      software-properties-common \
      ca-certificates \
      wget \
      curl \
      htop \
      zip \
      unzip

RUN cd /opt && \
    wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.6.14-Linux-x86_64.sh -O miniconda.sh && \
    /bin/bash ./miniconda.sh -b -p /opt/anaconda3 && \
    rm miniconda.sh && \
    /opt/anaconda3/bin/conda clean -tipsy && \
    ln -s /opt/anaconda3/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/anaconda3/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate base" >> ~/.bashrc && \
    conda config --set always_yes yes --set changeps1 no

RUN conda install pytorch-cpu torchvision-cpu -c pytorch && \
    pip install --upgrade pip && \
    pip install cmake && \
    pip install future pillow onnx opencv-python-headless tensorflow && \
    pip install Cython && pip install pycocotools && \
    pip install protobuf==3.20.*

# loadgen
RUN cd /tmp && \
    git clone --recursive https://github.com/manyiw99/mlperf_inference && \
    cd mlperf_inference/loadgen && \
    pip install pybind11 && \
    CFLAGS="-std=c++14" python setup.py install && \
    rm -rf mlperf 

COPY benchmarks/image_classification/python /app

# Prepare dataset and model
# Here's the dataset with 500 images
RUN cd ./data_imagenet && \
    unzip ILSVRC2012_img_val.zip && \
    rm -f ILSVRC2012_img_val.zip && \
    cd ../models && \
    unzip resnet50_v1.pb.zip && \
    rm -rf resnet50_v1.pb.zip

# Here's one image sample used to test Dockerfile
# RUN cd ./data_imagenet && \
#     wget --quiet https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/7weeks_old.JPG/800px-7weeks_old.JPG && \
#     echo "800px-7weeks_old.JPG 207" > val_map.txt && \
    # cd ./models && \
    # unzip resnet50_v1.pb.zip && \
    # rm -rf resnet50_v1.pb.zip


ADD https://raw.githubusercontent.com/manyiw99/vSwarm-proto/main/proto/image_classification/image_classification_pb2_grpc.py ./
ADD https://raw.githubusercontent.com/manyiw99/vSwarm-proto/main/proto/image_classification/image_classification_pb2.py ./proto/image_classification/

ENTRYPOINT ["python3","server.py"]
